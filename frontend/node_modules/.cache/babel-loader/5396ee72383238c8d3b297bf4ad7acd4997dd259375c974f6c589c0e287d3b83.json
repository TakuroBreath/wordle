{"ast":null,"code":"var _jsxFileName = \"/Users/takuro/Projects/wordle/frontend/src/pages/JoinGamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useTelegram } from '../contexts/TelegramContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/UI/Button';\nimport Card from '../components/UI/Card';\nimport LoadingScreen from '../components/LoadingScreen';\n\n// Контейнер страницы\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  padding: 16px;\n  max-width: 600px;\n  margin: 0 auto;\n  width: 100%;\n`;\n\n// Заголовок страницы\n_c = PageContainer;\nconst PageTitle = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 16px 0;\n  color: var(--tg-theme-text-color, #000000);\n`;\n\n// Форма\n_c2 = PageTitle;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\n// Группа формы\n_c3 = Form;\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\n// Метка для поля\n_c4 = FormGroup;\nconst Label = styled.label`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--tg-theme-text-color, #000000);\n`;\n\n// Поле ввода\n_c5 = Label;\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 8px;\n  border: 1px solid var(--tg-theme-hint-color, rgba(0, 0, 0, 0.2));\n  background-color: var(--tg-theme-bg-color, #ffffff);\n  color: var(--tg-theme-text-color, #000000);\n  font-size: 16px;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--tg-theme-button-color, #50a8eb);\n  }\n`;\n\n// Подсказка для поля\n_c6 = Input;\nconst FieldHint = styled.p`\n  font-size: 12px;\n  color: var(--tg-theme-hint-color, #999999);\n  margin: 0;\n`;\n\n// Группа кнопок\n_c7 = FieldHint;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 8px;\n`;\n_c8 = ButtonGroup;\nconst JoinGamePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    tg,\n    isReady\n  } = useTelegram();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [game, setGame] = useState(null);\n  const [betAmount, setBetAmount] = useState('');\n\n  // Загрузка данных игры\n  useEffect(() => {\n    const fetchGameData = async () => {\n      try {\n        setLoading(true);\n        const response = await api.game.get(id);\n        setGame(response.data);\n        setBetAmount(response.data.min_bet.toString());\n      } catch (err) {\n        console.error('Ошибка при загрузке игры:', err);\n        setError('Не удалось загрузить информацию об игре');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchGameData();\n  }, [id]);\n\n  // Настройка кнопок Telegram\n  useEffect(() => {\n    if (isReady && tg) {\n      tg.BackButton.show();\n      tg.BackButton.onClick(() => navigate(-1));\n    }\n    return () => {\n      if (isReady && tg) {\n        tg.BackButton.hide();\n      }\n    };\n  }, [isReady, tg, navigate]);\n\n  // Проверка авторизации при загрузке страницы\n  useEffect(() => {\n    if (!isAuthenticated) {\n      console.log('Пользователь не авторизован, перенаправление на главную страницу');\n      // Можно добавить сообщение о необходимости авторизации\n      // setError('Для присоединения к игре необходимо авторизоваться');\n    }\n  }, [isAuthenticated]);\n\n  // Присоединение к игре\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      var _api$apiClient, _api$apiClient$defaul, _api$apiClient$defaul2, _api$apiClient$defaul3, _response$data, _response$data2, _response$data2$lobby;\n      setLoading(true);\n      setError(null);\n\n      // Валидация данных\n      const betAmountNum = parseFloat(betAmount);\n      if (isNaN(betAmountNum)) {\n        throw new Error('Некорректная сумма ставки');\n      }\n      if (betAmountNum < game.min_bet || betAmountNum > game.max_bet) {\n        throw new Error(`Сумма ставки должна быть от ${game.min_bet} до ${game.max_bet} ${game.currency}`);\n      }\n\n      // Проверяем, что у нас есть все необходимые данные\n      if (!id || !game) {\n        throw new Error('Отсутствуют необходимые данные игры');\n      }\n\n      // Проверяем, что игра активна\n      if (game.status !== 'active') {\n        throw new Error('Игра неактивна');\n      }\n      const requestData = {\n        game_id: id,\n        bet_amount: betAmountNum\n      };\n      console.log('Подготовка данных для создания лобби:', {\n        request: requestData,\n        game: {\n          id: game.id,\n          title: game.title,\n          status: game.status,\n          min_bet: game.min_bet,\n          max_bet: game.max_bet,\n          currency: game.currency,\n          reward_multiplier: game.reward_multiplier\n        }\n      });\n\n      // Проверяем авторизацию\n      const token = localStorage.getItem('token');\n      console.log('Токен авторизации:', token ? `${token.substring(0, 15)}...` : 'Отсутствует');\n\n      // Проверяем заголовки API клиента\n      const authHeader = (_api$apiClient = api.apiClient) === null || _api$apiClient === void 0 ? void 0 : (_api$apiClient$defaul = _api$apiClient.defaults) === null || _api$apiClient$defaul === void 0 ? void 0 : (_api$apiClient$defaul2 = _api$apiClient$defaul.headers) === null || _api$apiClient$defaul2 === void 0 ? void 0 : (_api$apiClient$defaul3 = _api$apiClient$defaul2.common) === null || _api$apiClient$defaul3 === void 0 ? void 0 : _api$apiClient$defaul3['Authorization'];\n      console.log('Заголовок авторизации в API клиенте:', authHeader ? `${authHeader.substring(0, 20)}...` : 'Отсутствует');\n\n      // Если токен есть, но заголовок отсутствует, устанавливаем его\n      if (token && !authHeader) {\n        console.log('Установка токена в заголовки API перед запросом');\n        api.setAuthToken(token);\n      }\n\n      // Создаем лобби\n      console.log('Отправка запроса на создание лобби...');\n      const response = await api.lobby.join(requestData);\n      console.log('Ответ сервера при создании лобби:', {\n        status: response.status,\n        data: response.data,\n        headers: response.headers\n      });\n\n      // Проверяем формат ответа\n      const lobbyId = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.id) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$lobby = _response$data2.lobby) === null || _response$data2$lobby === void 0 ? void 0 : _response$data2$lobby.id);\n      if (lobbyId) {\n        console.log('Лобби успешно создано, переход на страницу лобби:', lobbyId);\n        // Переходим на страницу лобби\n        navigate(`/lobby/${lobbyId}`);\n      } else {\n        console.error('Ошибка: отсутствует ID лобби в ответе сервера:', response.data);\n        throw new Error('Не удалось создать лобби: отсутствует ID в ответе сервера');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Ошибка при присоединении к игре:', err);\n      let errorMessage = 'Не удалось присоединиться к игре. ';\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        var _err$response$config, _err$response$config2;\n        console.error('Детали ошибки от сервера:', {\n          status: err.response.status,\n          statusText: err.response.statusText,\n          data: err.response.data,\n          url: (_err$response$config = err.response.config) === null || _err$response$config === void 0 ? void 0 : _err$response$config.url,\n          method: (_err$response$config2 = err.response.config) === null || _err$response$config2 === void 0 ? void 0 : _err$response$config2.method\n        });\n        if (err.response.data.error.includes('active lobby not found')) {\n          errorMessage = 'Пожалуйста, попробуйте еще раз.';\n        } else {\n          errorMessage += err.response.data.error;\n        }\n      } else if (err.message) {\n        errorMessage += err.message;\n      } else {\n        errorMessage += 'Пожалуйста, попробуйте еще раз.';\n      }\n      setError(errorMessage);\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {\n      text: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0438\\u0433\\u0440\\u044B...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '40px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(-1),\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this);\n  }\n  if (!game) {\n    return /*#__PURE__*/_jsxDEV(PageContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: '40px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0418\\u0433\\u0440\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/'),\n          children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043A \\u0438\\u0433\\u0440\\u0430\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      children: \"\\u041F\\u0440\\u0438\\u0441\\u043E\\u0435\\u0434\\u0438\\u043D\\u0435\\u043D\\u0438\\u0435 \\u043A \\u0438\\u0433\\u0440\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E\\u0431 \\u0438\\u0433\\u0440\\u0435\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 500,\n            marginBottom: '8px'\n          },\n          children: game.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            color: 'var(--tg-theme-hint-color, #999999)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0414\\u043B\\u0438\\u043D\\u0430 \\u0441\\u043B\\u043E\\u0432\\u0430: \", game.length, \" \\u0431\\u0443\\u043A\\u0432\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u041F\\u043E\\u043F\\u044B\\u0442\\u043E\\u043A: \", game.max_tries]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u041C\\u043D\\u043E\\u0436\\u0438\\u0442\\u0435\\u043B\\u044C: x\", game.reward_multiplier]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"\\u0412\\u0430\\u0448\\u0430 \\u0441\\u0442\\u0430\\u0432\\u043A\\u0430\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"bet\",\n            children: [\"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u0441\\u0442\\u0430\\u0432\\u043A\\u0438 (\", game.currency, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            id: \"bet\",\n            value: betAmount,\n            onChange: e => setBetAmount(e.target.value),\n            required: true,\n            min: game.min_bet,\n            max: game.max_bet,\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FieldHint, {\n            children: [\"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0441\\u0442\\u0430\\u0432\\u043A\\u0430: \", game.min_bet, \" \", game.currency, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 79\n            }, this), \"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0441\\u0442\\u0430\\u0432\\u043A\\u0430: \", game.max_bet, \" \", game.currency, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 80\n            }, this), \"\\u0412\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u044B\\u0439 \\u0432\\u044B\\u0438\\u0433\\u0440\\u044B\\u0448: \", (parseFloat(betAmount) * game.reward_multiplier).toFixed(2), \" \", game.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            variant: \"secondary\",\n            onClick: () => navigate(-1),\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"\\u041F\\u0440\\u0438\\u0441\\u043E\\u0435\\u0434\\u0438\\u043D\\u0438\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 9\n  }, this);\n};\n_s(JoinGamePage, \"fI87qbhQzJBo+PVb2hsoB6Ri4hg=\", false, function () {\n  return [useParams, useNavigate, useTelegram, useAuth];\n});\n_c9 = JoinGamePage;\nexport default JoinGamePage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"PageTitle\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"FormGroup\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"FieldHint\");\n$RefreshReg$(_c8, \"ButtonGroup\");\n$RefreshReg$(_c9, \"JoinGamePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","styled","useTelegram","useAuth","api","Button","Card","LoadingScreen","jsxDEV","_jsxDEV","PageContainer","div","_c","PageTitle","h1","_c2","Form","form","_c3","FormGroup","_c4","Label","label","_c5","Input","input","_c6","FieldHint","p","_c7","ButtonGroup","_c8","JoinGamePage","_s","id","navigate","tg","isReady","isAuthenticated","loading","setLoading","error","setError","game","setGame","betAmount","setBetAmount","fetchGameData","response","get","data","min_bet","toString","err","console","BackButton","show","onClick","hide","log","handleSubmit","e","preventDefault","_api$apiClient","_api$apiClient$defaul","_api$apiClient$defaul2","_api$apiClient$defaul3","_response$data","_response$data2","_response$data2$lobby","betAmountNum","parseFloat","isNaN","Error","max_bet","currency","status","requestData","game_id","bet_amount","request","title","reward_multiplier","token","localStorage","getItem","substring","authHeader","apiClient","defaults","headers","common","setAuthToken","lobby","join","lobbyId","_err$response","_err$response$data","errorMessage","_err$response$config","_err$response$config2","statusText","url","config","method","includes","message","text","fileName","_jsxFileName","lineNumber","columnNumber","children","style","textAlign","margin","marginBottom","fontWeight","fontSize","color","length","max_tries","onSubmit","htmlFor","type","value","onChange","target","required","min","max","step","toFixed","variant","_c9","$RefreshReg$"],"sources":["/Users/takuro/Projects/wordle/frontend/src/pages/JoinGamePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useTelegram } from '../contexts/TelegramContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport api from '../services/api';\nimport Button from '../components/UI/Button';\nimport Card from '../components/UI/Card';\nimport LoadingScreen from '../components/LoadingScreen';\n\n// Контейнер страницы\nconst PageContainer = styled.div`\n  padding: 16px;\n  max-width: 600px;\n  margin: 0 auto;\n  width: 100%;\n`;\n\n// Заголовок страницы\nconst PageTitle = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 16px 0;\n  color: var(--tg-theme-text-color, #000000);\n`;\n\n// Форма\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\n// Группа формы\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\n// Метка для поля\nconst Label = styled.label`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--tg-theme-text-color, #000000);\n`;\n\n// Поле ввода\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 8px;\n  border: 1px solid var(--tg-theme-hint-color, rgba(0, 0, 0, 0.2));\n  background-color: var(--tg-theme-bg-color, #ffffff);\n  color: var(--tg-theme-text-color, #000000);\n  font-size: 16px;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--tg-theme-button-color, #50a8eb);\n  }\n`;\n\n// Подсказка для поля\nconst FieldHint = styled.p`\n  font-size: 12px;\n  color: var(--tg-theme-hint-color, #999999);\n  margin: 0;\n`;\n\n// Группа кнопок\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 8px;\n`;\n\nconst JoinGamePage = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const { tg, isReady } = useTelegram();\n    const { isAuthenticated } = useAuth();\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [game, setGame] = useState(null);\n    const [betAmount, setBetAmount] = useState('');\n\n    // Загрузка данных игры\n    useEffect(() => {\n        const fetchGameData = async () => {\n            try {\n                setLoading(true);\n                const response = await api.game.get(id);\n                setGame(response.data);\n                setBetAmount(response.data.min_bet.toString());\n            } catch (err) {\n                console.error('Ошибка при загрузке игры:', err);\n                setError('Не удалось загрузить информацию об игре');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchGameData();\n    }, [id]);\n\n    // Настройка кнопок Telegram\n    useEffect(() => {\n        if (isReady && tg) {\n            tg.BackButton.show();\n            tg.BackButton.onClick(() => navigate(-1));\n        }\n\n        return () => {\n            if (isReady && tg) {\n                tg.BackButton.hide();\n            }\n        };\n    }, [isReady, tg, navigate]);\n\n    // Проверка авторизации при загрузке страницы\n    useEffect(() => {\n        if (!isAuthenticated) {\n            console.log('Пользователь не авторизован, перенаправление на главную страницу');\n            // Можно добавить сообщение о необходимости авторизации\n            // setError('Для присоединения к игре необходимо авторизоваться');\n        }\n    }, [isAuthenticated]);\n\n    // Присоединение к игре\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            setLoading(true);\n            setError(null);\n\n            // Валидация данных\n            const betAmountNum = parseFloat(betAmount);\n            if (isNaN(betAmountNum)) {\n                throw new Error('Некорректная сумма ставки');\n            }\n\n            if (betAmountNum < game.min_bet || betAmountNum > game.max_bet) {\n                throw new Error(`Сумма ставки должна быть от ${game.min_bet} до ${game.max_bet} ${game.currency}`);\n            }\n\n            // Проверяем, что у нас есть все необходимые данные\n            if (!id || !game) {\n                throw new Error('Отсутствуют необходимые данные игры');\n            }\n\n            // Проверяем, что игра активна\n            if (game.status !== 'active') {\n                throw new Error('Игра неактивна');\n            }\n\n            const requestData = {\n                game_id: id,\n                bet_amount: betAmountNum\n            };\n\n            console.log('Подготовка данных для создания лобби:', {\n                request: requestData,\n                game: {\n                    id: game.id,\n                    title: game.title,\n                    status: game.status,\n                    min_bet: game.min_bet,\n                    max_bet: game.max_bet,\n                    currency: game.currency,\n                    reward_multiplier: game.reward_multiplier\n                }\n            });\n\n            // Проверяем авторизацию\n            const token = localStorage.getItem('token');\n            console.log('Токен авторизации:', token ? `${token.substring(0, 15)}...` : 'Отсутствует');\n\n            // Проверяем заголовки API клиента\n            const authHeader = api.apiClient?.defaults?.headers?.common?.['Authorization'];\n            console.log('Заголовок авторизации в API клиенте:',\n                authHeader ? `${authHeader.substring(0, 20)}...` : 'Отсутствует');\n\n            // Если токен есть, но заголовок отсутствует, устанавливаем его\n            if (token && !authHeader) {\n                console.log('Установка токена в заголовки API перед запросом');\n                api.setAuthToken(token);\n            }\n\n            // Создаем лобби\n            console.log('Отправка запроса на создание лобби...');\n            const response = await api.lobby.join(requestData);\n\n            console.log('Ответ сервера при создании лобби:', {\n                status: response.status,\n                data: response.data,\n                headers: response.headers\n            });\n\n            // Проверяем формат ответа\n            const lobbyId = response.data?.id || response.data?.lobby?.id;\n            if (lobbyId) {\n                console.log('Лобби успешно создано, переход на страницу лобби:', lobbyId);\n                // Переходим на страницу лобби\n                navigate(`/lobby/${lobbyId}`);\n            } else {\n                console.error('Ошибка: отсутствует ID лобби в ответе сервера:', response.data);\n                throw new Error('Не удалось создать лобби: отсутствует ID в ответе сервера');\n            }\n        } catch (err) {\n            console.error('Ошибка при присоединении к игре:', err);\n            let errorMessage = 'Не удалось присоединиться к игре. ';\n\n            if (err.response?.data?.error) {\n                console.error('Детали ошибки от сервера:', {\n                    status: err.response.status,\n                    statusText: err.response.statusText,\n                    data: err.response.data,\n                    url: err.response.config?.url,\n                    method: err.response.config?.method\n                });\n\n                if (err.response.data.error.includes('active lobby not found')) {\n                    errorMessage = 'Пожалуйста, попробуйте еще раз.';\n                } else {\n                    errorMessage += err.response.data.error;\n                }\n            } else if (err.message) {\n                errorMessage += err.message;\n            } else {\n                errorMessage += 'Пожалуйста, попробуйте еще раз.';\n            }\n\n            setError(errorMessage);\n            setLoading(false);\n        }\n    };\n\n    if (loading) {\n        return <LoadingScreen text=\"Загрузка игры...\" />;\n    }\n\n    if (error) {\n        return (\n            <PageContainer>\n                <div style={{ textAlign: 'center', margin: '40px 0' }}>\n                    <p>{error}</p>\n                    <Button onClick={() => navigate(-1)}>Назад</Button>\n                </div>\n            </PageContainer>\n        );\n    }\n\n    if (!game) {\n        return (\n            <PageContainer>\n                <div style={{ textAlign: 'center', margin: '40px 0' }}>\n                    <p>Игра не найдена</p>\n                    <Button onClick={() => navigate('/')}>Вернуться к играм</Button>\n                </div>\n            </PageContainer>\n        );\n    }\n\n    return (\n        <PageContainer>\n            <PageTitle>Присоединение к игре</PageTitle>\n\n            <Card title=\"Информация об игре\">\n                <div style={{ marginBottom: '16px' }}>\n                    <div style={{ fontWeight: 500, marginBottom: '8px' }}>{game.title}</div>\n                    <div style={{ fontSize: '14px', color: 'var(--tg-theme-hint-color, #999999)' }}>\n                        <div>Длина слова: {game.length} букв</div>\n                        <div>Попыток: {game.max_tries}</div>\n                        <div>Множитель: x{game.reward_multiplier}</div>\n                    </div>\n                </div>\n            </Card>\n\n            <Card title=\"Ваша ставка\">\n                <Form onSubmit={handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"bet\">Сумма ставки ({game.currency})</Label>\n                        <Input\n                            type=\"number\"\n                            id=\"bet\"\n                            value={betAmount}\n                            onChange={(e) => setBetAmount(e.target.value)}\n                            required\n                            min={game.min_bet}\n                            max={game.max_bet}\n                            step=\"0.1\"\n                        />\n                        <FieldHint>\n                            Минимальная ставка: {game.min_bet} {game.currency}<br />\n                            Максимальная ставка: {game.max_bet} {game.currency}<br />\n                            Возможный выигрыш: {(parseFloat(betAmount) * game.reward_multiplier).toFixed(2)} {game.currency}\n                        </FieldHint>\n                    </FormGroup>\n\n                    <ButtonGroup>\n                        <Button type=\"button\" variant=\"secondary\" onClick={() => navigate(-1)}>\n                            Отмена\n                        </Button>\n                        <Button type=\"submit\" variant=\"primary\">\n                            Присоединиться\n                        </Button>\n                    </ButtonGroup>\n                </Form>\n            </Card>\n        </PageContainer>\n    );\n};\n\nexport default JoinGamePage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}