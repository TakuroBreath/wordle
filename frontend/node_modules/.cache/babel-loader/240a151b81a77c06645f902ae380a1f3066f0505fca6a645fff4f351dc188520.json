{"ast":null,"code":"var _jsxFileName = \"/Users/takuro/Projects/wordle/frontend/src/pages/LobbyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { lobbyAPI } from '../api';\nimport { useAuth } from '../context/AuthContext';\nimport WordleGrid from '../components/WordleGrid';\nimport Keyboard from '../components/Keyboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 16px;\n`;\n_c = Container;\nconst Header = styled.div`\n  margin-bottom: 24px;\n`;\n_c2 = Header;\nconst BackButton = styled.button`\n  background: none;\n  border: none;\n  color: #0077cc;\n  font-size: 16px;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n_c3 = BackButton;\nconst Title = styled.h1`\n  font-size: 24px;\n  margin: 0 0 8px;\n  color: #333;\n`;\n_c4 = Title;\nconst Subtitle = styled.p`\n  font-size: 16px;\n  color: #666;\n  margin: 8px 0;\n`;\n_c5 = Subtitle;\nconst InfoBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: #f9f9f9;\n  border-radius: 12px;\n  padding: 16px;\n  margin-bottom: 24px;\n`;\n_c6 = InfoBar;\nconst InfoItem = styled.div`\n  text-align: center;\n`;\n_c7 = InfoItem;\nconst InfoLabel = styled.div`\n  font-size: 12px;\n  color: #666;\n  margin-bottom: 4px;\n`;\n_c8 = InfoLabel;\nconst InfoValue = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n`;\n_c9 = InfoValue;\nconst TimerValue = styled(InfoValue)`\n  color: ${props => props.isExpiring ? '#e53935' : '#333'};\n`;\n_c0 = TimerValue;\nconst GameSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n_c1 = GameSection;\nconst InputRow = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n`;\n_c10 = InputRow;\nconst WordInput = styled.input`\n  flex: 1;\n  padding: 12px;\n  font-size: 18px;\n  border: 2px solid #d3d6da;\n  border-radius: 6px;\n  text-transform: uppercase;\n  \n  &:focus {\n    outline: none;\n    border-color: #0077cc;\n  }\n  \n  &:disabled {\n    background-color: #f9f9f9;\n    cursor: not-allowed;\n  }\n`;\n_c11 = WordInput;\nconst SubmitButton = styled.button`\n  background-color: #0077cc;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 12px 20px;\n  font-size: 16px;\n  font-weight: bold;\n  margin-left: 8px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #0066b3;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n_c12 = SubmitButton;\nconst ResultSection = styled.div`\n  text-align: center;\n  padding: 24px;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  background-color: ${props => props.success ? '#e8f5e9' : '#ffebee'};\n`;\n_c13 = ResultSection;\nconst ResultTitle = styled.h2`\n  font-size: 24px;\n  margin: 0 0 16px;\n  color: ${props => props.success ? '#2e7d32' : '#c62828'};\n`;\n_c14 = ResultTitle;\nconst ResultMessage = styled.p`\n  font-size: 16px;\n  margin: 0 0 16px;\n  color: #666;\n`;\n_c15 = ResultMessage;\nconst RewardAmount = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  color: #0077cc;\n  margin: 16px 0;\n`;\n_c16 = RewardAmount;\nconst ActionButton = styled.button`\n  background-color: #0077cc;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 12px 20px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  width: 100%;\n  margin-top: 16px;\n  \n  &:hover {\n    background-color: #0066b3;\n  }\n`;\n_c17 = ActionButton;\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 40px 0;\n  color: #666;\n`;\n_c18 = LoadingIndicator;\nconst ErrorMessage = styled.div`\n  background-color: #ffebee;\n  color: #c62828;\n  padding: 12px;\n  border-radius: 6px;\n  margin: 16px 0;\n  font-size: 14px;\n`;\n_c19 = ErrorMessage;\nconst LobbyPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [lobby, setLobby] = useState(null);\n  const [game, setGame] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentWord, setCurrentWord] = useState('');\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [attempts, setAttempts] = useState([]);\n  const [letterStates, setLetterStates] = useState({});\n\n  // Загрузка данных лобби\n  const fetchLobbyData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await lobbyAPI.getLobby(id);\n      const lobbyData = response.data;\n      setLobby(lobbyData);\n      setGame(lobbyData.game);\n\n      // Преобразуем попытки в нужный формат\n      if (lobbyData.attempts && lobbyData.attempts.length > 0) {\n        const formattedAttempts = lobbyData.attempts.map(attempt => ({\n          word: attempt.word,\n          result: attempt.result\n        }));\n        setAttempts(formattedAttempts);\n\n        // Обновляем состояние клавиатуры\n        updateKeyboardState(formattedAttempts);\n      }\n\n      // Вычисляем оставшееся время\n      if (lobbyData.expires_at) {\n        const expiresAt = new Date(lobbyData.expires_at).getTime();\n        const now = Date.now();\n        const remaining = Math.max(0, Math.floor((expiresAt - now) / 1000));\n        setTimeLeft(remaining);\n      }\n    } catch (err) {\n      console.error('Error fetching lobby:', err);\n      setError('Не удалось загрузить данные лобби');\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n\n  // Обновление состояния клавиатуры\n  const updateKeyboardState = attemptsList => {\n    const states = {};\n\n    // Проходим по всем попыткам и обновляем состояние каждой буквы\n    attemptsList.forEach(attempt => {\n      const {\n        word,\n        result\n      } = attempt;\n      for (let i = 0; i < word.length; i++) {\n        const letter = word[i].toLowerCase();\n        const currentState = states[letter];\n        const newState = result[i];\n\n        // Обновляем состояние буквы, если новое состояние лучше\n        if (currentState === undefined || newState > currentState) {\n          states[letter] = newState;\n        }\n      }\n    });\n    setLetterStates(states);\n  };\n\n  // Первоначальная загрузка данных\n  useEffect(() => {\n    fetchLobbyData();\n  }, [fetchLobbyData]);\n\n  // Таймер для обратного отсчета\n  useEffect(() => {\n    if (!lobby || lobby.status !== 'active') return;\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          // Перезагружаем данные лобби, если время истекло\n          fetchLobbyData();\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [lobby, fetchLobbyData]);\n\n  // Форматирование времени\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n\n  // Возврат на главную страницу\n  const handleBack = () => {\n    navigate('/');\n  };\n\n  // Обработка ввода буквы\n  const handleKeyPress = key => {\n    if (currentWord.length < ((game === null || game === void 0 ? void 0 : game.length) || 5)) {\n      setCurrentWord(prev => prev + key);\n    }\n  };\n\n  // Обработка удаления буквы\n  const handleDelete = () => {\n    setCurrentWord(prev => prev.slice(0, -1));\n  };\n\n  // Обработка отправки слова\n  const handleSubmit = async () => {\n    if (currentWord.length !== ((game === null || game === void 0 ? void 0 : game.length) || 5)) {\n      setError(`Слово должно быть длиной ${(game === null || game === void 0 ? void 0 : game.length) || 5} букв`);\n      return;\n    }\n    try {\n      setSubmitting(true);\n      setError(null);\n      const response = await lobbyAPI.makeAttempt(id, currentWord);\n\n      // Добавляем новую попытку\n      const newAttempt = {\n        word: currentWord,\n        result: response.data\n      };\n      const updatedAttempts = [...attempts, newAttempt];\n      setAttempts(updatedAttempts);\n      updateKeyboardState(updatedAttempts);\n\n      // Очищаем поле ввода\n      setCurrentWord('');\n\n      // Перезагружаем данные лобби\n      fetchLobbyData();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error submitting attempt:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Не удалось отправить попытку');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  // Продление времени лобби\n  const handleExtendTime = async () => {\n    try {\n      setLoading(true);\n      await lobbyAPI.extendLobbyTime(id);\n      fetchLobbyData();\n    } catch (err) {\n      console.error('Error extending lobby time:', err);\n      setError('Не удалось продлить время игры');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Возврат на главную страницу\n  const handleReturnHome = () => {\n    navigate('/');\n  };\n\n  // Начать новую игру\n  const handlePlayAgain = () => {\n    navigate('/');\n  };\n  if (loading && !lobby) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043B\\u043E\\u0431\\u0431\\u0438...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this);\n  }\n  if (error && !lobby) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: handleBack,\n        children: \"\\u2190 \\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }, this);\n  }\n  if (!lobby) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: handleBack,\n        children: \"\\u2190 \\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: \"\\u041B\\u043E\\u0431\\u0431\\u0438 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Проверяем, закончена ли игра\n  const isGameFinished = lobby.status !== 'active';\n  const isSuccess = lobby.status === 'success';\n  const isExpired = lobby.status === 'failed_expired';\n  const isOutOfTries = lobby.status === 'failed_tries';\n\n  // Проверяем, мало ли времени осталось\n  const isTimeExpiring = timeLeft < 60;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      onClick: handleBack,\n      children: \"\\u2190 \\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [\"\\u0418\\u0433\\u0440\\u0430 \\\"\", (game === null || game === void 0 ? void 0 : game.title) || 'Wordle', \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        children: isGameFinished ? isSuccess ? 'Поздравляем! Вы угадали слово!' : 'Игра завершена' : 'Угадайте слово'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(InfoBar, {\n      children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"\\u041F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: [lobby.tries_used, \" / \", lobby.max_tries]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"\\u0421\\u0442\\u0430\\u0432\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: [lobby.bet_amount, \" \", game === null || game === void 0 ? void 0 : game.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"\\u041F\\u043E\\u0442\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0432\\u044B\\u0438\\u0433\\u0440\\u044B\\u0448\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoValue, {\n          children: [lobby.potential_reward, \" \", game === null || game === void 0 ? void 0 : game.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this), !isGameFinished && /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(InfoLabel, {\n          children: \"\\u0412\\u0440\\u0435\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TimerValue, {\n          isExpiring: isTimeExpiring,\n          children: formatTime(timeLeft)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameSection, {\n      children: [/*#__PURE__*/_jsxDEV(WordleGrid, {\n        attempts: attempts,\n        wordLength: (game === null || game === void 0 ? void 0 : game.length) || 5,\n        maxTries: lobby.max_tries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }, this), !isGameFinished && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(InputRow, {\n          children: [/*#__PURE__*/_jsxDEV(WordInput, {\n            type: \"text\",\n            value: currentWord,\n            onChange: e => setCurrentWord(e.target.value.toLowerCase()),\n            maxLength: (game === null || game === void 0 ? void 0 : game.length) || 5,\n            placeholder: `Введите слово (${(game === null || game === void 0 ? void 0 : game.length) || 5} букв)`,\n            disabled: submitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            onClick: handleSubmit,\n            disabled: currentWord.length !== ((game === null || game === void 0 ? void 0 : game.length) || 5) || submitting,\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n          onKeyPress: handleKeyPress,\n          onEnter: handleSubmit,\n          onDelete: handleDelete,\n          letterStates: letterStates,\n          disabled: submitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }, this), timeLeft < 120 && timeLeft > 0 && /*#__PURE__*/_jsxDEV(ActionButton, {\n          onClick: handleExtendTime,\n          children: \"\\u041F\\u0440\\u043E\\u0434\\u043B\\u0438\\u0442\\u044C \\u0432\\u0440\\u0435\\u043C\\u044F (+5 \\u043C\\u0438\\u043D\\u0443\\u0442)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }, this), isGameFinished && /*#__PURE__*/_jsxDEV(ResultSection, {\n      success: isSuccess,\n      children: [/*#__PURE__*/_jsxDEV(ResultTitle, {\n        success: isSuccess,\n        children: isSuccess ? 'Победа!' : 'Игра завершена'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ResultMessage, {\n        children: [isSuccess && 'Поздравляем! Вы угадали слово и выиграли награду!', isExpired && 'Время игры истекло. Попробуйте еще раз!', isOutOfTries && 'Вы использовали все попытки. Попробуйте еще раз!']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 21\n      }, this), isSuccess && /*#__PURE__*/_jsxDEV(RewardAmount, {\n        children: [\"\\u0412\\u044B\\u0438\\u0433\\u0440\\u044B\\u0448: \", lobby.reward || lobby.potential_reward, \" \", game === null || game === void 0 ? void 0 : game.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handlePlayAgain,\n        children: \"\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleReturnHome,\n        style: {\n          marginTop: '8px',\n          backgroundColor: '#f0f0f0',\n          color: '#333'\n        },\n        children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 9\n  }, this);\n};\n_s(LobbyPage, \"gFhxa4AnMqLa7O4yqB7lTbeqhHs=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c20 = LobbyPage;\nexport default LobbyPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"BackButton\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Subtitle\");\n$RefreshReg$(_c6, \"InfoBar\");\n$RefreshReg$(_c7, \"InfoItem\");\n$RefreshReg$(_c8, \"InfoLabel\");\n$RefreshReg$(_c9, \"InfoValue\");\n$RefreshReg$(_c0, \"TimerValue\");\n$RefreshReg$(_c1, \"GameSection\");\n$RefreshReg$(_c10, \"InputRow\");\n$RefreshReg$(_c11, \"WordInput\");\n$RefreshReg$(_c12, \"SubmitButton\");\n$RefreshReg$(_c13, \"ResultSection\");\n$RefreshReg$(_c14, \"ResultTitle\");\n$RefreshReg$(_c15, \"ResultMessage\");\n$RefreshReg$(_c16, \"RewardAmount\");\n$RefreshReg$(_c17, \"ActionButton\");\n$RefreshReg$(_c18, \"LoadingIndicator\");\n$RefreshReg$(_c19, \"ErrorMessage\");\n$RefreshReg$(_c20, \"LobbyPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","styled","lobbyAPI","useAuth","WordleGrid","Keyboard","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Header","_c2","BackButton","button","_c3","Title","h1","_c4","Subtitle","p","_c5","InfoBar","_c6","InfoItem","_c7","InfoLabel","_c8","InfoValue","_c9","TimerValue","props","isExpiring","_c0","GameSection","_c1","InputRow","_c10","WordInput","input","_c11","SubmitButton","_c12","ResultSection","success","_c13","ResultTitle","h2","_c14","ResultMessage","_c15","RewardAmount","_c16","ActionButton","_c17","LoadingIndicator","_c18","ErrorMessage","_c19","LobbyPage","_s","id","user","navigate","lobby","setLobby","game","setGame","loading","setLoading","submitting","setSubmitting","error","setError","currentWord","setCurrentWord","timeLeft","setTimeLeft","attempts","setAttempts","letterStates","setLetterStates","fetchLobbyData","response","getLobby","lobbyData","data","length","formattedAttempts","map","attempt","word","result","updateKeyboardState","expires_at","expiresAt","Date","getTime","now","remaining","Math","max","floor","err","console","attemptsList","states","forEach","i","letter","toLowerCase","currentState","newState","undefined","status","timer","setInterval","prevTime","clearInterval","formatTime","seconds","minutes","remainingSeconds","handleBack","handleKeyPress","key","prev","handleDelete","slice","handleSubmit","makeAttempt","newAttempt","updatedAttempts","_err$response","_err$response$data","handleExtendTime","extendLobbyTime","handleReturnHome","handlePlayAgain","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isGameFinished","isSuccess","isExpired","isOutOfTries","isTimeExpiring","title","tries_used","max_tries","bet_amount","currency","potential_reward","wordLength","maxTries","type","value","onChange","e","target","maxLength","placeholder","disabled","onKeyPress","onEnter","onDelete","reward","style","marginTop","backgroundColor","color","_c20","$RefreshReg$"],"sources":["/Users/takuro/Projects/wordle/frontend/src/pages/LobbyPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { lobbyAPI } from '../api';\nimport { useAuth } from '../context/AuthContext';\nimport WordleGrid from '../components/WordleGrid';\nimport Keyboard from '../components/Keyboard';\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 16px;\n`;\n\nconst Header = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst BackButton = styled.button`\n  background: none;\n  border: none;\n  color: #0077cc;\n  font-size: 16px;\n  cursor: pointer;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin: 0 0 8px;\n  color: #333;\n`;\n\nconst Subtitle = styled.p`\n  font-size: 16px;\n  color: #666;\n  margin: 8px 0;\n`;\n\nconst InfoBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: #f9f9f9;\n  border-radius: 12px;\n  padding: 16px;\n  margin-bottom: 24px;\n`;\n\nconst InfoItem = styled.div`\n  text-align: center;\n`;\n\nconst InfoLabel = styled.div`\n  font-size: 12px;\n  color: #666;\n  margin-bottom: 4px;\n`;\n\nconst InfoValue = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n`;\n\nconst TimerValue = styled(InfoValue)`\n  color: ${props => props.isExpiring ? '#e53935' : '#333'};\n`;\n\nconst GameSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nconst InputRow = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n`;\n\nconst WordInput = styled.input`\n  flex: 1;\n  padding: 12px;\n  font-size: 18px;\n  border: 2px solid #d3d6da;\n  border-radius: 6px;\n  text-transform: uppercase;\n  \n  &:focus {\n    outline: none;\n    border-color: #0077cc;\n  }\n  \n  &:disabled {\n    background-color: #f9f9f9;\n    cursor: not-allowed;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  background-color: #0077cc;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 12px 20px;\n  font-size: 16px;\n  font-weight: bold;\n  margin-left: 8px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #0066b3;\n  }\n  \n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ResultSection = styled.div`\n  text-align: center;\n  padding: 24px;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  background-color: ${props => props.success ? '#e8f5e9' : '#ffebee'};\n`;\n\nconst ResultTitle = styled.h2`\n  font-size: 24px;\n  margin: 0 0 16px;\n  color: ${props => props.success ? '#2e7d32' : '#c62828'};\n`;\n\nconst ResultMessage = styled.p`\n  font-size: 16px;\n  margin: 0 0 16px;\n  color: #666;\n`;\n\nconst RewardAmount = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  color: #0077cc;\n  margin: 16px 0;\n`;\n\nconst ActionButton = styled.button`\n  background-color: #0077cc;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 12px 20px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  width: 100%;\n  margin-top: 16px;\n  \n  &:hover {\n    background-color: #0066b3;\n  }\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 40px 0;\n  color: #666;\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: #ffebee;\n  color: #c62828;\n  padding: 12px;\n  border-radius: 6px;\n  margin: 16px 0;\n  font-size: 14px;\n`;\n\nconst LobbyPage = () => {\n    const { id } = useParams();\n    const { user } = useAuth();\n    const navigate = useNavigate();\n\n    const [lobby, setLobby] = useState(null);\n    const [game, setGame] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [submitting, setSubmitting] = useState(false);\n    const [error, setError] = useState(null);\n    const [currentWord, setCurrentWord] = useState('');\n    const [timeLeft, setTimeLeft] = useState(0);\n    const [attempts, setAttempts] = useState([]);\n    const [letterStates, setLetterStates] = useState({});\n\n    // Загрузка данных лобби\n    const fetchLobbyData = useCallback(async () => {\n        try {\n            setLoading(true);\n            setError(null);\n\n            const response = await lobbyAPI.getLobby(id);\n            const lobbyData = response.data;\n\n            setLobby(lobbyData);\n            setGame(lobbyData.game);\n\n            // Преобразуем попытки в нужный формат\n            if (lobbyData.attempts && lobbyData.attempts.length > 0) {\n                const formattedAttempts = lobbyData.attempts.map(attempt => ({\n                    word: attempt.word,\n                    result: attempt.result\n                }));\n                setAttempts(formattedAttempts);\n\n                // Обновляем состояние клавиатуры\n                updateKeyboardState(formattedAttempts);\n            }\n\n            // Вычисляем оставшееся время\n            if (lobbyData.expires_at) {\n                const expiresAt = new Date(lobbyData.expires_at).getTime();\n                const now = Date.now();\n                const remaining = Math.max(0, Math.floor((expiresAt - now) / 1000));\n                setTimeLeft(remaining);\n            }\n        } catch (err) {\n            console.error('Error fetching lobby:', err);\n            setError('Не удалось загрузить данные лобби');\n        } finally {\n            setLoading(false);\n        }\n    }, [id]);\n\n    // Обновление состояния клавиатуры\n    const updateKeyboardState = (attemptsList) => {\n        const states = {};\n\n        // Проходим по всем попыткам и обновляем состояние каждой буквы\n        attemptsList.forEach(attempt => {\n            const { word, result } = attempt;\n\n            for (let i = 0; i < word.length; i++) {\n                const letter = word[i].toLowerCase();\n                const currentState = states[letter];\n                const newState = result[i];\n\n                // Обновляем состояние буквы, если новое состояние лучше\n                if (currentState === undefined || newState > currentState) {\n                    states[letter] = newState;\n                }\n            }\n        });\n\n        setLetterStates(states);\n    };\n\n    // Первоначальная загрузка данных\n    useEffect(() => {\n        fetchLobbyData();\n    }, [fetchLobbyData]);\n\n    // Таймер для обратного отсчета\n    useEffect(() => {\n        if (!lobby || lobby.status !== 'active') return;\n\n        const timer = setInterval(() => {\n            setTimeLeft(prevTime => {\n                if (prevTime <= 1) {\n                    clearInterval(timer);\n                    // Перезагружаем данные лобби, если время истекло\n                    fetchLobbyData();\n                    return 0;\n                }\n                return prevTime - 1;\n            });\n        }, 1000);\n\n        return () => clearInterval(timer);\n    }, [lobby, fetchLobbyData]);\n\n    // Форматирование времени\n    const formatTime = (seconds) => {\n        const minutes = Math.floor(seconds / 60);\n        const remainingSeconds = seconds % 60;\n        return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n    };\n\n    // Возврат на главную страницу\n    const handleBack = () => {\n        navigate('/');\n    };\n\n    // Обработка ввода буквы\n    const handleKeyPress = (key) => {\n        if (currentWord.length < (game?.length || 5)) {\n            setCurrentWord(prev => prev + key);\n        }\n    };\n\n    // Обработка удаления буквы\n    const handleDelete = () => {\n        setCurrentWord(prev => prev.slice(0, -1));\n    };\n\n    // Обработка отправки слова\n    const handleSubmit = async () => {\n        if (currentWord.length !== (game?.length || 5)) {\n            setError(`Слово должно быть длиной ${game?.length || 5} букв`);\n            return;\n        }\n\n        try {\n            setSubmitting(true);\n            setError(null);\n\n            const response = await lobbyAPI.makeAttempt(id, currentWord);\n\n            // Добавляем новую попытку\n            const newAttempt = {\n                word: currentWord,\n                result: response.data\n            };\n\n            const updatedAttempts = [...attempts, newAttempt];\n            setAttempts(updatedAttempts);\n            updateKeyboardState(updatedAttempts);\n\n            // Очищаем поле ввода\n            setCurrentWord('');\n\n            // Перезагружаем данные лобби\n            fetchLobbyData();\n        } catch (err) {\n            console.error('Error submitting attempt:', err);\n            setError(err.response?.data?.error || 'Не удалось отправить попытку');\n        } finally {\n            setSubmitting(false);\n        }\n    };\n\n    // Продление времени лобби\n    const handleExtendTime = async () => {\n        try {\n            setLoading(true);\n            await lobbyAPI.extendLobbyTime(id);\n            fetchLobbyData();\n        } catch (err) {\n            console.error('Error extending lobby time:', err);\n            setError('Не удалось продлить время игры');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Возврат на главную страницу\n    const handleReturnHome = () => {\n        navigate('/');\n    };\n\n    // Начать новую игру\n    const handlePlayAgain = () => {\n        navigate('/');\n    };\n\n    if (loading && !lobby) {\n        return (\n            <Container>\n                <LoadingIndicator>Загрузка лобби...</LoadingIndicator>\n            </Container>\n        );\n    }\n\n    if (error && !lobby) {\n        return (\n            <Container>\n                <BackButton onClick={handleBack}>← Вернуться на главную</BackButton>\n                <ErrorMessage>{error}</ErrorMessage>\n            </Container>\n        );\n    }\n\n    if (!lobby) {\n        return (\n            <Container>\n                <BackButton onClick={handleBack}>← Вернуться на главную</BackButton>\n                <ErrorMessage>Лобби не найдено</ErrorMessage>\n            </Container>\n        );\n    }\n\n    // Проверяем, закончена ли игра\n    const isGameFinished = lobby.status !== 'active';\n    const isSuccess = lobby.status === 'success';\n    const isExpired = lobby.status === 'failed_expired';\n    const isOutOfTries = lobby.status === 'failed_tries';\n\n    // Проверяем, мало ли времени осталось\n    const isTimeExpiring = timeLeft < 60;\n\n    return (\n        <Container>\n            <BackButton onClick={handleBack}>← Вернуться на главную</BackButton>\n\n            <Header>\n                <Title>Игра \"{game?.title || 'Wordle'}\"</Title>\n                <Subtitle>\n                    {isGameFinished\n                        ? (isSuccess\n                            ? 'Поздравляем! Вы угадали слово!'\n                            : 'Игра завершена')\n                        : 'Угадайте слово'}\n                </Subtitle>\n            </Header>\n\n            {error && <ErrorMessage>{error}</ErrorMessage>}\n\n            <InfoBar>\n                <InfoItem>\n                    <InfoLabel>Попытки</InfoLabel>\n                    <InfoValue>{lobby.tries_used} / {lobby.max_tries}</InfoValue>\n                </InfoItem>\n                <InfoItem>\n                    <InfoLabel>Ставка</InfoLabel>\n                    <InfoValue>{lobby.bet_amount} {game?.currency}</InfoValue>\n                </InfoItem>\n                <InfoItem>\n                    <InfoLabel>Потенциальный выигрыш</InfoLabel>\n                    <InfoValue>{lobby.potential_reward} {game?.currency}</InfoValue>\n                </InfoItem>\n                {!isGameFinished && (\n                    <InfoItem>\n                        <InfoLabel>Время</InfoLabel>\n                        <TimerValue isExpiring={isTimeExpiring}>{formatTime(timeLeft)}</TimerValue>\n                    </InfoItem>\n                )}\n            </InfoBar>\n\n            <GameSection>\n                <WordleGrid\n                    attempts={attempts}\n                    wordLength={game?.length || 5}\n                    maxTries={lobby.max_tries}\n                />\n\n                {!isGameFinished && (\n                    <>\n                        <InputRow>\n                            <WordInput\n                                type=\"text\"\n                                value={currentWord}\n                                onChange={(e) => setCurrentWord(e.target.value.toLowerCase())}\n                                maxLength={game?.length || 5}\n                                placeholder={`Введите слово (${game?.length || 5} букв)`}\n                                disabled={submitting}\n                            />\n                            <SubmitButton\n                                onClick={handleSubmit}\n                                disabled={currentWord.length !== (game?.length || 5) || submitting}\n                            >\n                                Отправить\n                            </SubmitButton>\n                        </InputRow>\n\n                        <Keyboard\n                            onKeyPress={handleKeyPress}\n                            onEnter={handleSubmit}\n                            onDelete={handleDelete}\n                            letterStates={letterStates}\n                            disabled={submitting}\n                        />\n\n                        {timeLeft < 120 && timeLeft > 0 && (\n                            <ActionButton onClick={handleExtendTime}>\n                                Продлить время (+5 минут)\n                            </ActionButton>\n                        )}\n                    </>\n                )}\n            </GameSection>\n\n            {isGameFinished && (\n                <ResultSection success={isSuccess}>\n                    <ResultTitle success={isSuccess}>\n                        {isSuccess ? 'Победа!' : 'Игра завершена'}\n                    </ResultTitle>\n\n                    <ResultMessage>\n                        {isSuccess && 'Поздравляем! Вы угадали слово и выиграли награду!'}\n                        {isExpired && 'Время игры истекло. Попробуйте еще раз!'}\n                        {isOutOfTries && 'Вы использовали все попытки. Попробуйте еще раз!'}\n                    </ResultMessage>\n\n                    {isSuccess && (\n                        <RewardAmount>\n                            Выигрыш: {lobby.reward || lobby.potential_reward} {game?.currency}\n                        </RewardAmount>\n                    )}\n\n                    <ActionButton onClick={handlePlayAgain}>\n                        Играть снова\n                    </ActionButton>\n\n                    <ActionButton\n                        onClick={handleReturnHome}\n                        style={{ marginTop: '8px', backgroundColor: '#f0f0f0', color: '#333' }}\n                    >\n                        Вернуться на главную\n                    </ActionButton>\n                </ResultSection>\n            )}\n        </Container>\n    );\n};\n\nexport default LobbyPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}