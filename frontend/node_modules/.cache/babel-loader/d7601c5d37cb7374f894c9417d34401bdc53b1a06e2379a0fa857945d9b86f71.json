{"ast":null,"code":"var _jsxFileName = \"/Users/takuro/Projects/wordle/frontend/src/contexts/TelegramContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TelegramContext = /*#__PURE__*/createContext(null);\nexport const useTelegram = () => {\n  _s();\n  const context = useContext(TelegramContext);\n  if (!context) {\n    throw new Error('useTelegram должен быть использован внутри TelegramProvider');\n  }\n  return context;\n};\n_s(useTelegram, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function TelegramProvider({\n  children\n}) {\n  _s2();\n  const [tg, setTg] = useState(null);\n  const [user, setUser] = useState(null);\n  const [initData, setInitData] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n  useEffect(() => {\n    var _window$Telegram;\n    // Получаем доступ к Telegram WebApp API\n    const webApp = (_window$Telegram = window.Telegram) === null || _window$Telegram === void 0 ? void 0 : _window$Telegram.WebApp;\n    if (webApp) {\n      var _webApp$initDataUnsaf;\n      // Инициализация завершена - API доступно\n      webApp.ready();\n\n      // Устанавливаем данные в состояние\n      setTg(webApp);\n      setUser(((_webApp$initDataUnsaf = webApp.initDataUnsafe) === null || _webApp$initDataUnsaf === void 0 ? void 0 : _webApp$initDataUnsaf.user) || null);\n      setInitData(webApp.initData || null);\n\n      // Настраиваем внешний вид приложения\n      webApp.expand();\n\n      // Устанавливаем основной цвет кнопки в соответствии с темой Telegram\n      webApp.MainButton.setParams({\n        color: webApp.themeParams.button_color,\n        text_color: webApp.themeParams.button_text_color\n      });\n      setIsReady(true);\n    } else {\n      console.error('Telegram WebApp API не доступен');\n      // Для разработки - эмулируем пользователя и окружение\n      if (process.env.NODE_ENV === 'development') {\n        setTg({\n          MainButton: {\n            show: () => console.log('MainButton.show'),\n            hide: () => console.log('MainButton.hide'),\n            setParams: params => console.log('MainButton.setParams', params),\n            onClick: callback => console.log('MainButton.onClick', callback)\n          },\n          BackButton: {\n            show: () => console.log('BackButton.show'),\n            hide: () => console.log('BackButton.hide'),\n            onClick: callback => console.log('BackButton.onClick', callback)\n          },\n          themeParams: {\n            bg_color: '#ffffff',\n            text_color: '#000000',\n            hint_color: '#999999',\n            button_color: '#007aff',\n            button_text_color: '#ffffff'\n          },\n          isExpanded: true,\n          expand: () => console.log('WebApp.expand'),\n          close: () => console.log('WebApp.close'),\n          ready: () => console.log('WebApp.ready')\n        });\n        setUser({\n          id: 12345678,\n          first_name: 'Test',\n          last_name: 'User',\n          username: 'testuser',\n          language_code: 'ru'\n        });\n        setInitData('test_init_data');\n        setIsReady(true);\n      }\n    }\n  }, []);\n  const value = {\n    tg,\n    user,\n    initData,\n    isReady\n  };\n  return /*#__PURE__*/_jsxDEV(TelegramContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s2(TelegramProvider, \"FGXnvWyRTmQLKfig05PYDmnAYnM=\");\n_c = TelegramProvider;\nvar _c;\n$RefreshReg$(_c, \"TelegramProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","TelegramContext","useTelegram","_s","context","Error","TelegramProvider","children","_s2","tg","setTg","user","setUser","initData","setInitData","isReady","setIsReady","_window$Telegram","webApp","window","Telegram","WebApp","_webApp$initDataUnsaf","ready","initDataUnsafe","expand","MainButton","setParams","color","themeParams","button_color","text_color","button_text_color","console","error","process","env","NODE_ENV","show","log","hide","params","onClick","callback","BackButton","bg_color","hint_color","isExpanded","close","id","first_name","last_name","username","language_code","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/takuro/Projects/wordle/frontend/src/contexts/TelegramContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst TelegramContext = createContext(null);\n\nexport const useTelegram = () => {\n    const context = useContext(TelegramContext);\n    if (!context) {\n        throw new Error('useTelegram должен быть использован внутри TelegramProvider');\n    }\n    return context;\n};\n\nexport function TelegramProvider({ children }) {\n    const [tg, setTg] = useState(null);\n    const [user, setUser] = useState(null);\n    const [initData, setInitData] = useState(null);\n    const [isReady, setIsReady] = useState(false);\n\n    useEffect(() => {\n        // Получаем доступ к Telegram WebApp API\n        const webApp = window.Telegram?.WebApp;\n\n        if (webApp) {\n            // Инициализация завершена - API доступно\n            webApp.ready();\n\n            // Устанавливаем данные в состояние\n            setTg(webApp);\n            setUser(webApp.initDataUnsafe?.user || null);\n            setInitData(webApp.initData || null);\n\n            // Настраиваем внешний вид приложения\n            webApp.expand();\n\n            // Устанавливаем основной цвет кнопки в соответствии с темой Telegram\n            webApp.MainButton.setParams({\n                color: webApp.themeParams.button_color,\n                text_color: webApp.themeParams.button_text_color,\n            });\n\n            setIsReady(true);\n        } else {\n            console.error('Telegram WebApp API не доступен');\n            // Для разработки - эмулируем пользователя и окружение\n            if (process.env.NODE_ENV === 'development') {\n                setTg({\n                    MainButton: {\n                        show: () => console.log('MainButton.show'),\n                        hide: () => console.log('MainButton.hide'),\n                        setParams: (params) => console.log('MainButton.setParams', params),\n                        onClick: (callback) => console.log('MainButton.onClick', callback)\n                    },\n                    BackButton: {\n                        show: () => console.log('BackButton.show'),\n                        hide: () => console.log('BackButton.hide'),\n                        onClick: (callback) => console.log('BackButton.onClick', callback)\n                    },\n                    themeParams: {\n                        bg_color: '#ffffff',\n                        text_color: '#000000',\n                        hint_color: '#999999',\n                        button_color: '#007aff',\n                        button_text_color: '#ffffff',\n                    },\n                    isExpanded: true,\n                    expand: () => console.log('WebApp.expand'),\n                    close: () => console.log('WebApp.close'),\n                    ready: () => console.log('WebApp.ready')\n                });\n\n                setUser({\n                    id: 12345678,\n                    first_name: 'Test',\n                    last_name: 'User',\n                    username: 'testuser',\n                    language_code: 'ru'\n                });\n\n                setInitData('test_init_data');\n                setIsReady(true);\n            }\n        }\n    }, []);\n\n    const value = {\n        tg,\n        user,\n        initData,\n        isReady\n    };\n\n    return (\n        <TelegramContext.Provider value={value}>\n            {children}\n        </TelegramContext.Provider>\n    );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}