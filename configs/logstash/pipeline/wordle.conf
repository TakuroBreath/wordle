input {
  beats {
    port => 5044
  }
  tcp {
    port => 5001
    codec => json
  }
  udp {
    port => 5001
    codec => json
  }
}

filter {
  # Пытаемся распарсить сообщение как JSON
  json {
    source => "message"
    target => "log"
    skip_on_invalid_json => true
  }

  # Если JSON не удалось распарсить, обрабатываем как текстовый лог
  if ![log] {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}\t%{GREEDYDATA:level}\t%{GREEDYDATA:logger}\t%{GREEDYDATA:message}\t%{GREEDYDATA:fields}" }
    }

    # Добавляем поле для определения уровня логирования
    if [level] =~ /(?i)error|fatal/ {
      mutate {
        add_field => { "severity" => "ERROR" }
      }
    } else if [level] =~ /(?i)warn|warning/ {
      mutate {
        add_field => { "severity" => "WARNING" }
      }
    } else {
      mutate {
        add_field => { "severity" => "INFO" }
      }
    }
  } else {
    # Обработка JSON логов
    if [log][level] == "error" or [log][level] == "ERROR" or [log][level] == "fatal" or [log][level] == "FATAL" {
      mutate {
        add_field => { "severity" => "ERROR" }
      }
    } else if [log][level] == "warn" or [log][level] == "WARN" or [log][level] == "warning" or [log][level] == "WARNING" {
      mutate {
        add_field => { "severity" => "WARNING" }
      }
    } else {
      mutate {
        add_field => { "severity" => "INFO" }
      }
    }

    # Извлекаем полезные метаданные
    if [log][trace_id] {
      mutate {
        add_field => { "trace_id" => "%{[log][trace_id]}" }
      }
    }

    if [log][span_id] {
      mutate {
        add_field => { "span_id" => "%{[log][span_id]}" }
      }
    }
  }

  # Добавляем временные метки
  date {
    match => [ "[log][timestamp]", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSZ" ]
    target => "@timestamp"
    timezone => "UTC"
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "wordle-logs-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }
} 